{
  "unpublishedPage": {
    "name": "UserDashboard",
    "slug": "userdashboard",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 4896,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 1680,
          "containerStyle": "none",
          "snapRows": 124,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 87,
          "minHeight": 1292,
          "dynamicTriggerPathList": [],
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "UserDashboard_Prefs.getPrefs",
              "name": "Prefs.getPrefs",
              "collectionId": "UserDashboard_Prefs",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async function () {\n  return GetPrefs.run().then(data => {\n    console.log(data);\n    var typs = [];\n    if (data[0] == undefined) {\n      storeValue('typs', undefined);\n      storeValue('miny', undefined);\n      storeValue('maxy', undefined);\n      storeValue('minl', undefined);\n      storeValue('maxl', undefined);\n      storeValue('minp', undefined);\n      storeValue('maxp', undefined);\n      storeValue('minb', undefined);\n      storeValue('maxb', undefined);\n      storeValue('mins', undefined);\n      storeValue('maxs', undefined);\n      storeValue('keywords', undefined);\n      storeValue('minh', undefined);\n      storeValue('mind', undefined);\n    } else {\n      if (data[0]['single_family']) typs.push('single_family');\n      if (data[0]['multi_family']) typs.push('multi_family');\n      if (data[0]['mobile_home']) typs.push('mobile');\n      if (data[0]['land']) typs.push('land');\n      if (data[0]['farm']) typs.push('farm');\n      storeValue('typs', typs);\n      if (data[0]['min_built'] == null) {\n        storeValue('miny', undefined);\n      } else {\n        storeValue('miny', data[0]['min_built']);\n      }\n      if (data[0]['max_built'] == null) {\n        storeValue('maxy', undefined);\n      } else {\n        storeValue('maxy', data[0]['max_built']);\n      }\n      if (data[0]['min_lot'] == null) {\n        storeValue('minl', undefined);\n      } else {\n        storeValue('minl', String(data[0]['min_lot']));\n      }\n      if (data[0]['max_lot'] == null) {\n        storeValue('maxl', undefined);\n      } else {\n        storeValue('maxl', String(data[0]['max_lot']));\n      }\n      if (data[0]['min_price'] == null) {\n        storeValue('minp', undefined);\n      } else {\n        storeValue('minp', data[0]['min_price']);\n      }\n      if (data[0]['max_price'] == null) {\n        storeValue('maxp', undefined);\n      } else {\n        storeValue('maxp', data[0]['max_price']);\n      }\n      if (data[0]['min_beds'] == null) {\n        storeValue('minb', undefined);\n      } else {\n        storeValue('minb', String(data[0]['min_beds']));\n      }\n      if (data[0]['max_beds'] == null) {\n        storeValue('maxb', undefined);\n      } else {\n        storeValue('maxb', String(data[0]['max_beds']));\n      }\n      if (data[0]['min_sqft'] == null) {\n        storeValue('mins', undefined);\n      } else {\n        storeValue('mins', String(data[0]['min_sqft']));\n      }\n      if (data[0]['max_sqft'] == null) {\n        storeValue('maxs', undefined);\n      } else {\n        storeValue('maxs', String(data[0]['max_sqft']));\n      }\n      if (data[0]['keywords'] == null) {\n        storeValue('keywords', undefined);\n      } else {\n        storeValue('keywords', String(data[0]['keywords']));\n      }\n      if (data[0]['min_hoa'] == null) {\n        storeValue('minh', undefined);\n      } else {\n        storeValue('minh', String(data[0]['min_hoa']));\n      }\n      if (data[0]['min_days_on_mkt'] == null) {\n        storeValue('mind', undefined);\n      } else {\n        storeValue('mind', String(data[0]['min_days_on_mkt']));\n      }\n    }\n  });\n}"
              ],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "UserDashboard_ZipPrep.getIds",
              "name": "ZipPrep.getIds",
              "collectionId": "UserDashboard_ZipPrep",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async function () {\n  GetState.run().then(data => {\n    storeValue('coords', [data[0]['lat'], data[0]['lng']]);\n    ReadZips.run().then(data => {\n      var ids = [];\n      var zips = [];\n      for (const i in data) {\n        const id = data[i]['place_id'];\n        const zip = data[i]['postal_code'];\n        ids.push(id);\n        zips.push(zip);\n      }\n      storeValue('idRead', String(ids));\n      storeValue('zipRead', String(zips));\n      var ziplist = [];\n      for (const i in ids) {\n        var obj = {\n          \"postal_code\": Number(zips[i]),\n          \"place_id\": ids[i]\n        };\n        ziplist.push(obj);\n      }\n      storeValue('zipList', ziplist);\n    });\n  });\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "UserDashboard",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "64961e46fd339e5d2dc31191_64d7957e6e14801e744e8a17"
}